/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Data.GeneradorDeBacterias;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author CANALEIJA
 */
public class SimulacionGUI extends javax.swing.JFrame {

    GeneradorDeBacterias aux;

    /**
     * Creates new form SimulacionGUI
     */
    public SimulacionGUI() {
        initComponents();
        initListeners();
        cambiarEstado();

        aux = new GeneradorDeBacterias(Integer.parseInt(jTxtNumBacterias.getText()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanelBacterias = new javax.swing.JPanel();
        jLblImage = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTxtNumBacterias = new javax.swing.JTextField();
        jBtnGenerar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxMedio = new javax.swing.JComboBox();
        jTextFieldImagenes = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ecoliBox = new javax.swing.JCheckBox();
        tiphyBox = new javax.swing.JCheckBox();
        cereusBox = new javax.swing.JCheckBox();
        aureusBox = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextCount = new javax.swing.JTextArea();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanelBacterias.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout jPanelBacteriasLayout = new javax.swing.GroupLayout(jPanelBacterias);
        jPanelBacterias.setLayout(jPanelBacteriasLayout);
        jPanelBacteriasLayout.setHorizontalGroup(
            jPanelBacteriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBacteriasLayout.createSequentialGroup()
                .addComponent(jLblImage)
                .addGap(0, 510, Short.MAX_VALUE))
        );
        jPanelBacteriasLayout.setVerticalGroup(
            jPanelBacteriasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBacteriasLayout.createSequentialGroup()
                .addComponent(jLblImage)
                .addGap(0, 520, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Parametros"));

        jTxtNumBacterias.setText("0");

        jBtnGenerar.setText("Generar");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Número de colonias");
        jLabel1.setFocusable(false);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Bacteria");
        jLabel2.setFocusable(false);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Medio de cultivo");
        jLabel3.setFocusable(false);

        jComboBoxMedio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EMB", "Verde Brillante", "Baird Parker", "Yema de Huevo", "Salmonella Shigella" }));
        jComboBoxMedio.setFocusable(false);

        jTextFieldImagenes.setText("1");
        jTextFieldImagenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldImagenesActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Número de imágenes");
        jLabel4.setFocusable(false);

        ecoliBox.setText("E. coli");
        ecoliBox.setFocusable(false);

        tiphyBox.setText("S. typhimurium");
        tiphyBox.setFocusable(false);

        cereusBox.setText("B. cereus");
        cereusBox.setFocusable(false);

        aureusBox.setText("S. aureus");
        aureusBox.setFocusable(false);

        jTextCount.setEditable(false);
        jTextCount.setBackground(new java.awt.Color(240, 240, 240));
        jTextCount.setColumns(3);
        jTextCount.setForeground(new java.awt.Color(240, 240, 240));
        jTextCount.setRows(3);
        jTextCount.setBorder(null);
        jTextCount.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextCount.setEnabled(false);
        jTextCount.setFocusable(false);
        jScrollPane1.setViewportView(jTextCount);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jBtnGenerar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTxtNumBacterias)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jComboBoxMedio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTextFieldImagenes)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(ecoliBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tiphyBox))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cereusBox)
                        .addGap(14, 14, 14)
                        .addComponent(aureusBox)
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtNumBacterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldImagenes, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxMedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ecoliBox)
                    .addComponent(tiphyBox))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cereusBox)
                    .addComponent(aureusBox))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addComponent(jBtnGenerar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelBacterias, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBacterias, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.getAccessibleContext().setAccessibleName("Parámetros");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldImagenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldImagenesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldImagenesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimulacionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimulacionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimulacionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimulacionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimulacionGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox aureusBox;
    private javax.swing.JCheckBox cereusBox;
    private javax.swing.JCheckBox ecoliBox;
    private javax.swing.JButton jBtnGenerar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBoxMedio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLblImage;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBacterias;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextCount;
    private javax.swing.JTextField jTextFieldImagenes;
    private javax.swing.JTextField jTxtNumBacterias;
    private javax.swing.JCheckBox tiphyBox;
    // End of variables declaration//GEN-END:variables

    private void initListeners() {
        this.jBtnGenerar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                generarBacterias();
                JOptionPane.showMessageDialog(jPanel2, "Se creó una carpeta con las muestras en " + aux.dirPath);
            }
        });

        this.jComboBoxMedio.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cambiarEstado();
            }
        });
    }

    private void cambiarEstado() {

        String medio = this.jComboBoxMedio.getSelectedItem().toString();

        if (medio.equals("EMB") || medio.equals("Verde Brillante") || medio.equals("Salmonella Shigella")) {
            ecoliBox.setEnabled(true);
            tiphyBox.setEnabled(true);
            aureusBox.setEnabled(false);
            cereusBox.setEnabled(false);

            ecoliBox.setSelected(false);
            tiphyBox.setSelected(false);
            aureusBox.setSelected(false);
            cereusBox.setSelected(false);

        }
        if (medio.equals("Baird Parker")) {
            ecoliBox.setEnabled(false);
            tiphyBox.setEnabled(false);
            aureusBox.setEnabled(true);
            cereusBox.setEnabled(false);

            ecoliBox.setSelected(false);
            tiphyBox.setSelected(false);
            aureusBox.setSelected(false);
            cereusBox.setSelected(false);
        }
        if (medio.equals("Yema de Huevo")) {
            ecoliBox.setEnabled(false);
            tiphyBox.setEnabled(false);
            aureusBox.setEnabled(false);
            cereusBox.setEnabled(true);

            ecoliBox.setSelected(false);
            tiphyBox.setSelected(false);
            aureusBox.setSelected(false);
            cereusBox.setSelected(false);
        }
    }

    private void generarBacterias() {
        ArrayList<String> bacteria = new ArrayList();
        String medio = this.jComboBoxMedio.getSelectedItem().toString();
        int imagenes = Integer.parseInt(this.jTextFieldImagenes.getText());
        int numeroBacterias = Integer.parseInt(this.jTxtNumBacterias.getText());
        aux = new GeneradorDeBacterias(numeroBacterias);

        if (ecoliBox.isSelected()) {
            bacteria.add("E. coli");
        }
        if (tiphyBox.isSelected()) {
            bacteria.add("S. typhimurium");
        }
        if (cereusBox.isSelected()) {
            bacteria.add("B. cereus");
        }
        if (aureusBox.isSelected()) {
            bacteria.add("S. aureus");
        }

        if (numeroBacterias >= 25 && numeroBacterias <= 250) {
            if (imagenes > 0) {
                if (ecoliBox.isSelected() || tiphyBox.isSelected() || aureusBox.isSelected() || cereusBox.isSelected()) {
                    this.jLblImage.setIcon(new ImageIcon(aux.getImagenColonias(bacteria, medio, imagenes)));
                } else {
                    JOptionPane.showMessageDialog(jPanel2, "Selecciona una bacteria");
                }
            } else {
                JOptionPane.showMessageDialog(jPanel2, "Debes generar al menos una imagen");
            }
        } else {
            JOptionPane.showMessageDialog(jPanel2, "Una muestra válida tiene entre 25 y 250 colonias");
        }

        mostrarResultado();
    }

    private void mostrarResultado() {

        //Verificar qué checkbox está seleccionado
        if (ecoliBox.isSelected()) {
            jTextCount.setText(jTxtNumBacterias.getText().toString() + " UFC de " + ecoliBox.getText() + "\n");
        }
        if (tiphyBox.isSelected()) {
            jTextCount.setText(jTxtNumBacterias.getText().toString() + " UFC de " + tiphyBox.getText() + "\n");
        }
        if (aureusBox.isSelected()) {
            jTextCount.setText(jTxtNumBacterias.getText().toString() + " UFC de " + aureusBox.getText() + "\n");
        }
        if (cereusBox.isSelected()) {
            jTextCount.setText(jTxtNumBacterias.getText().toString() + " UFC de " + cereusBox.getText() + "\n");
        }
        if (ecoliBox.isSelected() && tiphyBox.isSelected()) {
            jTextCount.setText(aux.getNumBact1() + " UFC de " + ecoliBox.getText() + "\n");
            jTextCount.setText(jTextCount.getText() + aux.getNumBact2() + " UFC de " + tiphyBox.getText() + "\n");
            jTextCount.setText(jTextCount.getText() + "Total: " + jTxtNumBacterias.getText().toString() + " UFC");
        }
    }
}